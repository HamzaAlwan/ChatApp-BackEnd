{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/auth-tabs/auth-tabs.component.html","webpack:///./src/app/components/auth-tabs/auth-tabs.component.ts","webpack:///./src/app/components/chat/chat.component.html","webpack:///./src/app/components/chat/chat.component.ts","webpack:///./src/app/components/comments/comments.component.html","webpack:///./src/app/components/comments/comments.component.ts","webpack:///./src/app/components/followers/followers.component.html","webpack:///./src/app/components/followers/followers.component.ts","webpack:///./src/app/components/following/following.component.html","webpack:///./src/app/components/following/following.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/messages/messages.component.html","webpack:///./src/app/components/messages/messages.component.ts","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/notifications/notifications.component.html","webpack:///./src/app/components/notifications/notifications.component.ts","webpack:///./src/app/components/people/people.component.html","webpack:///./src/app/components/people/people.component.ts","webpack:///./src/app/components/post-form/post-form.component.html","webpack:///./src/app/components/post-form/post-form.component.ts","webpack:///./src/app/components/posts/posts.component.html","webpack:///./src/app/components/posts/posts.component.ts","webpack:///./src/app/components/side/side.component.html","webpack:///./src/app/components/side/side.component.ts","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/components/streams/streams.component.html","webpack:///./src/app/components/streams/streams.component.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/modules/angular-material.module.ts","webpack:///./src/app/modules/auth/auth-routing.module.ts","webpack:///./src/app/modules/auth/auth.module.ts","webpack:///./src/app/modules/group.module.ts","webpack:///./src/app/modules/streams/streams-routing.module.ts","webpack:///./src/app/modules/streams/streams.module.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/messages.service.ts","webpack:///./src/app/services/notifications.service.ts","webpack:///./src/app/services/posts.service.ts","webpack:///./src/app/services/token-interceptor.ts","webpack:///./src/app/services/token.service.ts","webpack:///./src/app/services/users.service.ts","webpack:///./src/assets/countries.js","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { TokenService } from './services/token.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  constructor(private router: Router, private tokenService: TokenService) {}\r\n\r\n  ngOnInit() {\r\n    const token = this.tokenService.getToken();\r\n    if (token) {\r\n      this.router.navigate(['streams']);\r\n    } else {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { GroupModule } from './modules/group.module';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { TokenInterceptor } from './services/token-interceptor';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [BrowserModule, HttpClientModule, GroupModule],\r\n  providers: [\r\n    CookieService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","<div id=\"auth-tabs\" class=\"container-fluid text-center registeration\">\r\n  <mat-tab-group\r\n    dynamicHeight\r\n    mat-align-tabs=\"center\"\r\n    [backgroundColor]=\"'primary'\"\r\n    [color]=\"'accent'\"\r\n  >\r\n    <mat-tab label=\"Login\">\r\n      <div class=\"card login mat-elevation-z4\">\r\n        <h4>Welcome Back, Login</h4>\r\n        <div class=\"form login\">\r\n          <app-login></app-login>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Sign up\">\r\n      <div class=\"card sign mat-elevation-z4\">\r\n        <h4>Sign Up</h4>\r\n        <div class=\"form signup\">\r\n          <app-signup></app-signup>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth-tabs',\r\n  templateUrl: './auth-tabs.component.html',\r\n  styleUrls: ['./auth-tabs.component.scss']\r\n})\r\nexport class AuthTabsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-3 col-md-4 col-sm-12\">\n      <app-side></app-side>\n    </div>\n\n    <div class=\"col-lg-9 col-md-8 col-sm-12\">\n      <mat-card class=\"chat-card\">\n        <app-messages></app-messages>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-chat\",\n  templateUrl: \"./chat.component.html\",\n  styleUrls: [\"./chat.component.scss\"]\n})\nexport class ChatComponent implements OnInit {\n  online_Users = [];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div class=\"container-fluid\">\r\n  <div>\r\n    <button class=\"close\" (click)=\"close()\">\r\n      <mat-icon>clear</mat-icon>\r\n    </button>\r\n    <h4 class=\"text-center\">{{ post.username }} Post</h4>\r\n  </div>\r\n  <div class=\"row\">\r\n    <mat-card class=\"post-card col-12\">\r\n      <img\r\n        class=\"postImg\"\r\n        mat-card-image\r\n        src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"\r\n        alt=\"Photo of a Shiba Inu\"\r\n      />\r\n      <mat-card-content>\r\n        <h5>\r\n          {{ post.post }}\r\n        </h5>\r\n      </mat-card-content>\r\n      <mat-card-actions class=\"postActions\">\r\n        <button\r\n          mat-button\r\n          [ngClass]=\"!checkUserLikes(post.likes) ? '' : 'liked'\"\r\n          (click)=\"onLike(post)\"\r\n        >\r\n          <mat-icon>thumb_up</mat-icon> Like {{ post.likes.length }}\r\n        </button>\r\n        <button\r\n          mat-button\r\n          [ngClass]=\"!checkUserComments(post.comments) ? '' : 'commented'\"\r\n          (click)=\"commentInput.focus()\"\r\n        >\r\n          <mat-icon>question_answer</mat-icon> Comment\r\n          {{ post.comments.length }}\r\n        </button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n    <form\r\n      class=\"col-12\"\r\n      [formGroup]=\"commentForm\"\r\n      (ngSubmit)=\"addComment()\"\r\n      novalidate\r\n    >\r\n      <mat-form-field class=\"col-12\" appearance=\"outline\">\r\n        <mat-label>Write Comment</mat-label>\r\n        <textarea\r\n          #commentInput\r\n          matInput\r\n          formControlName=\"comment\"\r\n          placeholder=\"Add Comment\"\r\n        ></textarea>\r\n      </mat-form-field>\r\n      <div class=\"col-12\">\r\n        <mat-card-actions>\r\n          <button\r\n            [disabled]=\"!commentForm.value.comment\"\r\n            mat-raised-button\r\n            class=\"btn-primary btn-lg actionbtn\"\r\n          >\r\n            Add Comment\r\n          </button>\r\n        </mat-card-actions>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <mat-card-content>\r\n    <mat-card-header>\r\n      <mat-card-title>Comments</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <mat-card-content *ngIf=\"post.comments\">\r\n      <mat-card\r\n        class=\"comments\"\r\n        *ngFor=\"let comment of post.comments.slice().reverse()\"\r\n      >\r\n        <mat-card-header>\r\n          <mat-card-title\r\n            >{{ comment.username }}\r\n            <span class=\"subtitle\">{{\r\n              timeFromNow(comment.createdAt)\r\n            }}</span></mat-card-title\r\n          >\r\n        </mat-card-header>\r\n\r\n        <mat-card-content class=\"comment\">{{\r\n          comment.comment\r\n        }}</mat-card-content>\r\n      </mat-card>\r\n    </mat-card-content>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <mat-card-actions>\r\n      <button\r\n        mat-raised-button\r\n        color=\"warn\"\r\n        (click)=\"close()\"\r\n        class=\"btn-danger btn-lg actionbtn\"\r\n      >\r\n        Close\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card-actions>\r\n</div>\r\n","import { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatSnackBar } from \"@angular/material\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport * as moment from \"moment\";\r\nimport { some } from \"lodash\";\r\n\r\nimport { PostsService } from \"../../services/posts.service\";\r\nimport { TokenService } from \"../../services/token.service\";\r\n\r\n@Component({\r\n  selector: \"app-comments\",\r\n  templateUrl: \"./comments.component.html\",\r\n  styleUrls: [\"./comments.component.scss\"]\r\n})\r\nexport class CommentsComponent implements OnInit {\r\n  socket: any;\r\n  username: any;\r\n  commentForm: FormGroup;\r\n  post: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private postsService: PostsService,\r\n    private tokenService: TokenService,\r\n    private snackBar: MatSnackBar,\r\n    public dialogRef: MatDialogRef<CommentsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private matData: any\r\n  ) {\r\n    this.socket = io(\"http://localhost:5500\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.username = this.tokenService.getPayload().username;\r\n\r\n    this.post = this.matData.post;\r\n    this.commentForm = this.fb.group({\r\n      comment: [\"\"],\r\n      postId: [\"\"]\r\n    });\r\n\r\n    // Detect event and update the current post\r\n    this.socket.on(\"refreshPage\", () => {\r\n      this.getPost();\r\n    });\r\n  }\r\n\r\n  getPost() {\r\n    this.postsService.getPost(this.post._id).subscribe(data => {\r\n      this.post = data.post;\r\n    });\r\n  }\r\n\r\n  addComment() {\r\n    this.commentForm.value.postId = this.post._id;\r\n    this.postsService.addComment(this.commentForm.value).subscribe(data => {\r\n      this.socket.emit(\"refresh\", {});\r\n      this.commentForm.reset();\r\n    });\r\n  }\r\n\r\n  onLike(post) {\r\n    this.postsService.likePost(post).subscribe(\r\n      data => {\r\n        this.socket.emit(\"refresh\", {});\r\n      },\r\n      err => {\r\n        this.snackBar.open(err, \"Close\", {\r\n          duration: 3000\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  checkUserLikes(arr) {\r\n    return some(arr, { username: this.username });\r\n  }\r\n\r\n  checkUserComments(arr) {\r\n    return some(arr, { username: this.username });\r\n  }\r\n\r\n  timeFromNow(time) {\r\n    return moment(time).fromNow();\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-3 col-md-4 col-sm-12\">\n      <app-side></app-side>\n    </div>\n\n    <div class=\"col-lg-9 col-md-8 col-sm-12\">\n      <mat-form-field class=\"col-12 searchInput\" appearance=\"outline\">\n        <mat-icon matPrefix>search</mat-icon>\n        <input\n          matInput\n          type=\"search\"\n          placeholder=\"Search People\"\n          [(ngModel)]=\"search\"\n        />\n        <button\n          mat-button\n          *ngIf=\"search\"\n          matSuffix\n          mat-icon-button\n          aria-label=\"Clear\"\n          (click)=\"search = ''\"\n        >\n          <mat-icon>close</mat-icon>\n        </button>\n      </mat-form-field>\n      <div class=\"col-12\" *ngIf=\"followers?.length > 0\">\n        <div\n          *ngFor=\"let user of followers\"\n          class=\"usercard col-xl-4 col-lg-6 col-md-12 col-sm-12\"\n        >\n          <mat-card>\n            <img\n              mat-card-image\n              src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"\n              alt=\"Photo of a Shiba Inu\"\n            />\n            <mat-card-header>\n              <mat-card-title>{{ user.follower.username }}</mat-card-title>\n              <mat-card-subtitle>\n                <img\n                  class=\"flag\"\n                  src=\"../../../assets/flags/{{ user.follower.country }}.png\"\n                />\n              </mat-card-subtitle>\n            </mat-card-header>\n\n            <mat-card-actions>\n              <!-- If the user is followed -->\n              <button\n                *ngIf=\"\n                  checkUserFollowing(user.follower.followers, currentUser._id)\n                \"\n                mat-raised-button\n                class=\"followed\"\n                (click)=\"unFollow(user.follower)\"\n              >\n                <span><mat-icon> record_voice_over </mat-icon> Unfollow</span>\n              </button>\n\n              <!-- If the user is not followed -->\n              <button\n                *ngIf=\"\n                  !checkUserFollowing(user.follower.followers, currentUser._id)\n                \"\n                mat-raised-button\n                (click)=\"onFollow(user.follower)\"\n              >\n                <span>\n                  <mat-icon>\n                    voice_over_off\n                  </mat-icon>\n                  Follow\n                </span>\n              </button>\n\n              <button\n                mat-raised-button\n                [routerLink]=\"['/chat', user.follower.username]\"\n              >\n                <mat-icon>message</mat-icon>\n              </button>\n            </mat-card-actions>\n          </mat-card>\n        </div>\n      </div>\n      <div class=\"col-12 text-center\" *ngIf=\"followers?.length === 0\">\n        <h1>You have no followers</h1>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UsersService } from \"../../services/users.service\";\nimport { TokenService } from \"../../services/token.service\";\n\nimport { find } from \"lodash\";\n\nimport io from \"socket.io-client\";\n\n@Component({\n  selector: \"app-followers\",\n  templateUrl: \"./followers.component.html\",\n  styleUrls: [\"./followers.component.scss\"]\n})\nexport class FollowersComponent implements OnInit {\n  socket: any;\n  followers: any;\n  currentUser: any;\n  search: any;\n\n  constructor(\n    private usersService: UsersService,\n    private tokenService: TokenService\n  ) {\n    this.socket = io(\"http://localhost:5500\");\n  }\n\n  ngOnInit() {\n    this.currentUser = this.tokenService.getPayload();\n    this.getCurrentUser();\n    this.socket.on(\"refreshPage\", () => {\n      this.getCurrentUser();\n    });\n  }\n\n  getCurrentUser() {\n    this.usersService.getUserById(this.currentUser._id).subscribe(\n      data => {\n        this.followers = data.user.followers;\n        this.currentUser = data.user;\n      },\n      err => console.log(err)\n    );\n  }\n\n  checkUserFollowing(arr, id) {\n    const found = find(arr, [\"follower\", id]);\n    return found ? true : false;\n  }\n\n  onFollow(user) {\n    this.usersService.followUser(user._id).subscribe(res => {\n      this.socket.emit(\"refresh\", {});\n    });\n  }\n\n  unFollow(user) {\n    this.usersService.unFollowUser(user._id).subscribe(res => {\n      this.socket.emit(\"refresh\", {});\n    });\n  }\n}\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-3 col-md-4 col-sm-12\">\r\n      <app-side></app-side>\r\n    </div>\r\n    <div class=\"col-lg-9 col-md-8 col-sm-12\">\r\n      <mat-form-field class=\"col-12 searchInput\" appearance=\"outline\">\r\n        <mat-icon matPrefix>search</mat-icon>\r\n        <input\r\n          matInput\r\n          type=\"search\"\r\n          placeholder=\"Search People\"\r\n          [(ngModel)]=\"search\"\r\n        />\r\n        <button\r\n          mat-button\r\n          *ngIf=\"search\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"search = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <div class=\"col-12\">\r\n        <div\r\n          *ngFor=\"let user of following\"\r\n          class=\"usercard col-xl-4 col-lg-6 col-md-12 col-sm-12\"\r\n        >\r\n          <mat-card>\r\n            <img\r\n              mat-card-image\r\n              src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"\r\n              alt=\"Photo of a Shiba Inu\"\r\n            />\r\n            <mat-card-header>\r\n              <mat-card-title>{{ user.followed.username }}</mat-card-title>\r\n              <mat-card-subtitle>\r\n                <img\r\n                  class=\"flag\"\r\n                  src=\"../../../assets/flags/{{ user.followed.country }}.png\"\r\n                />\r\n              </mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <mat-card-actions>\r\n              <button\r\n                mat-raised-button\r\n                class=\"followed\"\r\n                (click)=\"unFollow(user.followed)\"\r\n              >\r\n                <span><mat-icon> record_voice_over </mat-icon> Unfollow</span>\r\n              </button>\r\n              <button\r\n                mat-raised-button\r\n                [routerLink]=\"['/chat', user.followed.username]\"\r\n              >\r\n                <mat-icon>message</mat-icon>\r\n              </button>\r\n            </mat-card-actions>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { UsersService } from \"../../services/users.service\";\r\nimport { TokenService } from \"../../services/token.service\";\r\n\r\nimport io from \"socket.io-client\";\r\n@Component({\r\n  selector: \"app-following\",\r\n  templateUrl: \"./following.component.html\",\r\n  styleUrls: [\"./following.component.scss\"]\r\n})\r\nexport class FollowingComponent implements OnInit {\r\n  socket: any;\r\n  following: any;\r\n  currentUser: any;\r\n  search: any;\r\n\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private tokenService: TokenService\r\n  ) {\r\n    this.socket = io(\"http://localhost:5500\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.tokenService.getPayload();\r\n    this.getCurrentUser();\r\n    this.socket.on(\"refreshPage\", () => {\r\n      this.getCurrentUser();\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    this.usersService.getUserById(this.currentUser._id).subscribe(\r\n      data => {\r\n        this.following = data.user.following;\r\n        this.currentUser = data.user;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  unFollow(user) {\r\n    this.usersService.unFollowUser(user._id).subscribe(res => {\r\n      this.socket.emit(\"refresh\", {});\r\n    });\r\n  }\r\n}\r\n","<div class=\"container-fluid register\">\r\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser()\" novalidate>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-6 col-12\" appearance=\"legacy\">\r\n        <mat-label>Email</mat-label>\r\n        <input\r\n          formControlName=\"email\"\r\n          matInput\r\n          placeholder=\"Enter Email\"\r\n          required\r\n        />\r\n        <mat-icon matSuffix>email</mat-icon>\r\n        <mat-error *ngIf=\"loginForm.controls['email'].invalid\">{{\r\n          getEmailError()\r\n        }}</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6 col-12\" appearance=\"legacy\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          formControlName=\"password\"\r\n          type=\"password\"\r\n          matInput\r\n          placeholder=\"Enter Password\"\r\n          required\r\n        />\r\n        <mat-icon matSuffix>lock</mat-icon>\r\n        <mat-error *ngIf=\"loginForm.controls['password'].invalid\"\r\n          >Password is required</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <button\r\n        id=\"loginbtn\"\r\n        [disabled]=\"loginForm.invalid\"\r\n        class=\"btn btn-primary btn-block btn-md\"\r\n      >\r\n        Login\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { TokenService } from \"../../services/token.service\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private tokenService: TokenService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.fb.group({\r\n      email: [\"\", [Validators.email, Validators.required]],\r\n      password: [\"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  loginUser() {\r\n    this.authService.loginUser(this.loginForm.value).subscribe(\r\n      res => {\r\n        // Setting the token\r\n        this.tokenService.setToken(res.token);\r\n        this.loginForm.reset();\r\n        this.router.navigate([\"streams\"]);\r\n      },\r\n      err => {\r\n        if (err.error.messageJoi) {\r\n          this.snackBar.open(err.error.messageJoi[0].message, \"Close\", {\r\n            duration: 500\r\n          });\r\n        } else if (err.error.message) {\r\n          this.snackBar.open(err.error.message, \"Close\", {\r\n            duration: 500\r\n          });\r\n        } else {\r\n          console.log(err);\r\n          this.snackBar.open(\"Internal server error\", \"Close\", {\r\n            duration: 500\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getEmailError() {\r\n    const email = this.loginForm.get(\"email\");\r\n    return email.hasError(\"required\")\r\n      ? \"Email is required\"\r\n      : email.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n}\r\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <div class=\"container clearfix\">\n      <div class=\"chat\">\n        <div class=\"chat-header clearfix\">\n          <img src=\"../../../assets/user.svg\" alt=\"avatar\" />\n\n          <div class=\"chat-about\">\n            <div class=\"chat-with\">Chat with {{ receiver?.username }}</div>\n            <div [ngClass]=\"isOnline ? 'online' : 'offline'\">\n              <mat-icon style=\"font-size: 20px !important\">{{\n                isOnline ? \"lens\" : \"panorama_fish_eye\"\n              }}</mat-icon\n              >{{ isOnline ? \"Online\" : \"Offline\" }}\n            </div>\n          </div>\n        </div>\n        <!-- end chat-header -->\n\n        <div class=\"chat-history\" id=\"chat-history\" #chatDiv>\n          <div *ngFor=\"let msg of messages\">\n            <!-- Sender -->\n            <div\n              class=\"clearfix\"\n              *ngIf=\"currentUser?.username === msg.senderName\"\n            >\n              <div class=\"message-data sender right\">\n                <span class=\"message-data-time\">{{\n                  msg.createdAt.slice(0, 7)\n                }}</span>\n                &nbsp; &nbsp; <span class=\"message-data-name\">Me</span>\n              </div>\n              <div class=\"message other-message float-right\">\n                {{ msg.body }}\n              </div>\n            </div>\n\n            <!-- Receiver -->\n            <div\n              *ngIf=\"\n                currentUser.username !== receiver.username &&\n                currentUser.username !== msg.senderName\n              \"\n            >\n              <div class=\"message-data receiver left\">\n                <span class=\"message-data-name\"> {{ receiver.username }}</span>\n                <span class=\"message-data-time\">{{\n                  msg.createdAt.slice(0, 7)\n                }}</span>\n              </div>\n              <div class=\"message my-message\">\n                {{ msg.body }}\n              </div>\n            </div>\n          </div>\n          <span *ngIf=\"typing\" class=\"typing\"\n            >{{ receiver.username }} is typing...</span\n          >\n        </div>\n        <!-- end chat-history -->\n\n        <div class=\"chat-message clearfix\">\n          <mat-form-field style=\"width: 100%\" appearance=\"outline\">\n            <mat-label>Send a message</mat-label>\n            <input\n              autofocus\n              matInput\n              name=\"message\"\n              [(ngModel)]=\"message\"\n              (keypress)=\"isTyping()\"\n              (keydown)=\"sendMessage($event)\"\n            />\n          </mat-form-field>\n          <button (click)=\"sendMessage()\" mat-raised-button>\n            Send <mat-icon>send</mat-icon>\n          </button>\n        </div>\n        <!-- end chat-message -->\n      </div>\n      <!-- end chat -->\n    </div>\n    <!-- end container -->\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectorRef,\n  ViewChild,\n  AfterViewInit\n} from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { TokenService } from \"src/app/services/token.service\";\nimport { MessagesService } from \"src/app/services/messages.service\";\nimport { UsersService } from \"src/app/services/users.service\";\n\nimport io from \"socket.io-client\";\n\n@Component({\n  selector: \"app-messages\",\n  templateUrl: \"./messages.component.html\",\n  styleUrls: [\"./messages.component.scss\"]\n})\nexport class MessagesComponent implements OnInit, AfterViewInit {\n  socket: any;\n  messages: any;\n  receiverName: any;\n  receiver: any;\n  currentUser: any;\n  message: any;\n\n  typingMessage;\n  typing = false;\n  isOnline;\n\n  constructor(\n    private tokenService: TokenService,\n    private messagesService: MessagesService,\n    private usersService: UsersService,\n    private route: ActivatedRoute,\n    private cdRef: ChangeDetectorRef\n  ) {\n    this.socket = io(\"http://localhost:5500\");\n  }\n\n  @ViewChild(\"chatDiv\") chatDiv;\n\n  // The ability to auto scroll after sending a message;\n  scrollBottom() {\n    this.chatDiv.nativeElement.scrollTop = this.chatDiv.nativeElement.scrollHeight;\n  }\n\n  ngAfterViewInit() {\n    const params = {\n      room1: this.currentUser.username,\n      room2: this.receiverName\n    };\n\n    this.socket.emit(\"join chat\", params);\n\n    this.socket.on(\"usersOnline\", data => {\n      const result = data.indexOf(this.receiverName);\n      if (result > -1) {\n        this.isOnline = true;\n      } else {\n        this.isOnline = false;\n      }\n    });\n  }\n\n  ngAfterViewChecked() {\n    this.scrollBottom();\n    this.cdRef.detectChanges();\n  }\n\n  ngOnInit() {\n    this.currentUser = this.tokenService.getPayload();\n    this.getCurrentUser();\n    this.route.params.subscribe(params => {\n      this.receiverName = params.name;\n      this.getUserByName(params.name);\n\n      // Mark Messages as readW\n      this.messagesService\n        .markMessage(this.currentUser.username, params.name)\n        .subscribe(data => {\n          this.socket.emit(\"refresh\", {});\n        });\n\n      this.socket.on(\"refreshPage\", () => {\n        this.getUserByName(this.receiver.username);\n        this.getCurrentUser();\n      });\n    });\n\n    this.socket.on(\"start_typing\", data => {\n      if (data.sender === this.receiverName) {\n        this.typing = true;\n      }\n    });\n\n    this.socket.on(\"stop_typing\", data => {\n      if (data.sender === this.receiverName) {\n        this.typing = false;\n      }\n    });\n  }\n\n  getCurrentUser() {\n    this.usersService.getUserById(this.currentUser._id).subscribe(data => {\n      this.currentUser = data.user;\n    });\n  }\n\n  getUserByName(username) {\n    this.usersService.getUserByName(username).subscribe(data => {\n      this.receiver = data.user;\n      this.getMessages(this.currentUser._id, data.user._id);\n    });\n  }\n\n  getMessages(senderId, receiverId) {\n    this.messagesService.getMessages(senderId, receiverId).subscribe(res => {\n      this.messages = res.messages.message;\n    });\n  }\n\n  sendMessage(e = undefined) {\n    if ((!e && this.message) || (e.keyCode == 13 && this.message)) {\n      this.messagesService\n        .sendMessage(\n          this.currentUser._id,\n          this.receiver._id,\n          this.receiver.username,\n          this.message\n        )\n        .subscribe(res => {\n          this.socket.emit(\"refresh\", {});\n          this.message = \"\";\n        });\n    }\n  }\n\n  isTyping() {\n    this.socket.emit(\"typing\", {\n      sender: this.currentUser.username,\n      receiver: this.receiverName\n    });\n\n    if (this.typingMessage) {\n      clearTimeout(this.typingMessage);\n    }\n\n    this.typingMessage = setTimeout(() => {\n      this.socket.emit(\"notTyping\", {\n        sender: this.currentUser.username,\n        receiver: this.receiverName\n      });\n    }, 1000);\n  }\n}\n","<mat-sidenav-container class=\"mat-elevation-z4\">\r\n  <mat-menu #menu=\"matMenu\">\r\n    <a mat-menu-item [routerLink]=\"['/streams']\">\r\n      <mat-icon mat-list-icon>home</mat-icon>\r\n      <span mat-line>home</span>\r\n    </a>\r\n    <a mat-menu-item (click)=\"logout()\">\r\n      <mat-icon mat-list-icon>exit_to_app</mat-icon>\r\n      <span mat-line>Logout</span>\r\n    </a>\r\n  </mat-menu>\r\n\r\n  <mat-toolbar color=\"primary\">\r\n    <button matTooltip=\"Home\" mat-button [routerLink]=\"['/streams']\">\r\n      <img class=\"logo\" src=\"../../../assets/logo.png\" />\r\n      &nbsp; Chat\r\n    </button>\r\n    <span class=\"fill-space\"></span>\r\n    <span matTooltip=\"You\"\r\n      ><img\r\n        matTooltip=\"{{ currentUser.username }}\"\r\n        src=\"{{\r\n          !currentUser.image ? '../../../assets/user.svg' : 'currentUser.image'\r\n        }}\"\r\n        class=\"rounded-circle img-fluid userImg\"\r\n        [matMenuTriggerFor]=\"menu\"\r\n      />\r\n      <span class=\"username\">{{ currentUser.username }} </span>\r\n    </span>\r\n    <div class=\"navbtns\">\r\n      <!-- Notification Start -->\r\n      <button\r\n        matTooltip=\"Notifications\"\r\n        mat-button\r\n        [matMenuTriggerFor]=\"notiMenu\"\r\n      >\r\n        <mat-icon\r\n          [matBadge]=\"notificationsCount\"\r\n          matBadgePosition=\"before\"\r\n          [matBadgeHidden]=\"notificationsCount < 1\"\r\n          matBadgeColor=\"accent\"\r\n          >notifications</mat-icon\r\n        >\r\n        <mat-menu id=\"noti-menu\" #notiMenu=\"matMenu\">\r\n          <button\r\n            class=\"markAllRead\"\r\n            mat-raised-button\r\n            color=\"warn\"\r\n            (click)=\"markAllNoti()\"\r\n          >\r\n            Mark all as read\r\n          </button>\r\n          <span\r\n            class=\"notifications\"\r\n            *ngIf=\"currentUser.notifications.length > 0\"\r\n          >\r\n            <mat-card\r\n              class=\"noti-card mat-elevation-z4\"\r\n              *ngFor=\"let noti of currentUser.notifications.slice().reverse()\"\r\n            >\r\n              <button\r\n                matTooltip=\"Delete Notification\"\r\n                class=\"close noti-remove\"\r\n                (click)=\"removeNoti(noti)\"\r\n              >\r\n                <mat-icon>delete_forever</mat-icon>\r\n              </button>\r\n              <button\r\n                [matTooltip]=\"!noti.read ? 'Mark as Read' : 'Read'\"\r\n                class=\"close noti-icon\"\r\n                (click)=\"!noti.read ? markNotiRead(noti) : ''\"\r\n              >\r\n                <mat-icon\r\n                  [ngStyle]=\"{ color: !noti.read ? 'blue' : 'green' }\"\r\n                  >{{ !noti.read ? \"lens\" : \"panorama_fish_eye\" }}</mat-icon\r\n                >\r\n              </button>\r\n\r\n              <mat-card-header>\r\n                <div mat-card-avatar class=\"noImage avatar\"></div>\r\n                <mat-card-title\r\n                  class=\"noti-title\"\r\n                  [ngStyle]=\"{ 'font-weight': !noti.read ? 'bold' : 'normal' }\"\r\n                  >{{ noti.message }}</mat-card-title\r\n                >\r\n                <mat-card-subtitle class=\"time\">{{\r\n                  timeFromNow(noti.created)\r\n                }}</mat-card-subtitle>\r\n              </mat-card-header>\r\n            </mat-card>\r\n          </span>\r\n          <h3 *ngIf=\"currentUser.notifications.length === 0\">\r\n            You have no notifications\r\n          </h3>\r\n        </mat-menu>\r\n      </button>\r\n      <!-- Notification End -->\r\n\r\n      <!-- Messages Start -->\r\n      <button matTooltip=\"Messages\" mat-button [matMenuTriggerFor]=\"msgMenu\">\r\n        <mat-icon\r\n          [matBadge]=\"msgCount\"\r\n          matBadgePosition=\"before\"\r\n          [matBadgeHidden]=\"msgCount < 1\"\r\n          matBadgeColor=\"accent\"\r\n          >message</mat-icon\r\n        >\r\n        <mat-menu id=\"noti-menu\" #msgMenu=\"matMenu\">\r\n          <button\r\n            class=\"markAllRead\"\r\n            (click)=\"markAllMessages()\"\r\n            mat-raised-button\r\n            color=\"warn\"\r\n          >\r\n            Mark all as read\r\n          </button>\r\n          <span class=\"notifications\" *ngIf=\"currentUser.chatList.length > 0\">\r\n            <mat-card\r\n              class=\"noti-card mat-elevation-z4\"\r\n              *ngFor=\"let chat of currentUser.chatList\"\r\n              style=\"cursor: pointer\"\r\n              (click)=\"goToChatPage(chat.receiverId.username)\"\r\n            >\r\n              <mat-icon\r\n                class=\"close noti-icon\"\r\n                *ngIf=\"chat?.messageId.message\"\r\n                [matTooltip]=\"\r\n                  !chat.messageId.message[chat.messageId.message.length - 1]\r\n                    .isRead &&\r\n                  chat.receiverId.username !==\r\n                    chat.messageId.message[chat.messageId.message.length - 1]\r\n                      .receiverName\r\n                    ? 'Not Read'\r\n                    : 'Read'\r\n                \"\r\n                [ngStyle]=\"{\r\n                  color:\r\n                    !chat.messageId.message[chat.messageId.message.length - 1]\r\n                      .isRead &&\r\n                    chat.receiverId.username !==\r\n                      chat.messageId.message[chat.messageId.message.length - 1]\r\n                        .receiverName\r\n                      ? 'blue'\r\n                      : 'green'\r\n                }\"\r\n                >{{\r\n                  !chat.messageId.message[chat.messageId.message.length - 1]\r\n                    .isRead &&\r\n                  chat.receiverId.username !==\r\n                    chat.messageId.message[chat.messageId.message.length - 1]\r\n                      .receiverName\r\n                    ? \"lens\"\r\n                    : \"panorama_fish_eye\"\r\n                }}</mat-icon\r\n              >\r\n\r\n              <mat-card-header\r\n                [ngStyle]=\"{\r\n                  'font-weight':\r\n                    !chat.messageId.message[chat.messageId.message.length - 1]\r\n                      .isRead &&\r\n                    chat.receiverId.username !==\r\n                      chat.messageId.message[chat.messageId.message.length - 1]\r\n                        .receiverName\r\n                      ? 'bold'\r\n                      : 'normal'\r\n                }\"\r\n                *ngIf=\"chat?.messageId?.message?.length > 0\"\r\n              >\r\n                <div mat-card-avatar class=\"noImage avatar\"></div>\r\n                <mat-card-title\r\n                  [ngStyle]=\"{\r\n                    'font-weight':\r\n                      !chat.messageId.message[chat.messageId.message.length - 1]\r\n                        .isRead &&\r\n                      chat.receiverId.username !==\r\n                        chat.messageId.message[\r\n                          chat.messageId.message.length - 1\r\n                        ].receiverName\r\n                        ? 'bold'\r\n                        : 'normal'\r\n                  }\"\r\n                  class=\"noti-title\"\r\n                  >{{ chat.receiverId.username }}</mat-card-title\r\n                >\r\n                <mat-card-subtitle>\r\n                  <span>\r\n                    {{\r\n                      chat.messageId.message[chat.messageId.message.length - 1]\r\n                        .body\r\n                    }}\r\n                  </span>\r\n                  <br />\r\n                  <span class=\"time\">\r\n                    {{\r\n                      timeFromNow(\r\n                        chat.messageId.message[\r\n                          chat.messageId.message.length - 1\r\n                        ].createdAt\r\n                      )\r\n                    }}</span\r\n                  ></mat-card-subtitle\r\n                >\r\n              </mat-card-header>\r\n            </mat-card>\r\n          </span>\r\n          <h3 *ngIf=\"currentUser?.chatList?.length === 0\">\r\n            You have no notifications\r\n          </h3>\r\n        </mat-menu>\r\n      </button>\r\n      <!-- Messages End -->\r\n\r\n      <button matTooltip=\"Logout\" mat-button (click)=\"logout()\">\r\n        <mat-icon>exit_to_app</mat-icon>&nbsp;\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Display in mobile -->\r\n    <div class=\"navbtns-icons\">\r\n      <button matTooltip=\"Logout\" mat-icon-button (click)=\"logout()\">\r\n        <mat-icon>exit_to_app</mat-icon>\r\n      </button>\r\n    </div>\r\n  </mat-toolbar>\r\n</mat-sidenav-container>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  AfterViewInit,\r\n  Output,\r\n  EventEmitter\r\n} from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { TokenService } from \"../../services/token.service\";\r\nimport { UsersService } from \"../../services/users.service\";\r\nimport { MessagesService } from \"../../services/messages.service\";\r\nimport { NotificationsService } from \"../../services/notifications.service\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport * as moment from \"moment\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: \"app-navbar\",\r\n  templateUrl: \"./navbar.component.html\",\r\n  styleUrls: [\"./navbar.component.scss\"]\r\n})\r\nexport class NavbarComponent implements OnInit, AfterViewInit {\r\n  @Output() onlineUsers = new EventEmitter();\r\n\r\n  token: any;\r\n  socket: any;\r\n  currentUser: any;\r\n  notificationsCount: any;\r\n  msgCount = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private tokenService: TokenService,\r\n    private usersService: UsersService,\r\n    private messagesService: MessagesService,\r\n    private notificationService: NotificationsService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    this.socket = io(\"http://localhost:5500\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.tokenService.getPayload();\r\n    this.getCurrentUser();\r\n    this.socket.on(\"refreshPage\", () => {\r\n      this.getCurrentUser();\r\n    });\r\n\r\n    this.socket.emit(\"online\", {\r\n      room: \"global\",\r\n      user: this.currentUser.username\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.socket.on(\"usersOnline\", data => {\r\n      this.onlineUsers.emit(data);\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    this.usersService.getUserById(this.currentUser._id).subscribe(\r\n      data => {\r\n        this.currentUser = data.user;\r\n        // Number of unread notifications\r\n        this.notificationsCount = data.user.notifications.filter(\r\n          elem => !elem.read\r\n        ).length;\r\n        this.checkIfRead(data.user.chatList);\r\n      },\r\n      err => {\r\n        if (err.error.token === null) {\r\n          this.tokenService.deleteToken();\r\n        }\r\n        this.router.navigate([\"\"]);\r\n      }\r\n    );\r\n  }\r\n\r\n  checkIfRead(arr) {\r\n    let checkCount = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n      const receiver =\r\n        arr[i].messageId.message[arr[i].messageId.message.length - 1];\r\n      if (this.router.url !== `/chat/${receiver.senderName}`) {\r\n        if (\r\n          receiver.isRead === false &&\r\n          receiver.receiverName === this.currentUser.username\r\n        ) {\r\n          checkCount++;\r\n          this.msgCount = checkCount;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.tokenService.deleteToken();\r\n    this.router.navigate([\"\"]);\r\n  }\r\n\r\n  goToChatPage(name) {\r\n    this.router.navigate([\"chat\", name]);\r\n  }\r\n  // Notifications\r\n  markNotiRead(noti) {\r\n    this.notificationService.markRead(noti._id).subscribe(data => {\r\n      this.socket.emit(\"refresh\", {});\r\n    });\r\n  }\r\n\r\n  // Notifications\r\n  markAllNoti() {\r\n    this.notificationService.markAllRead().subscribe(data => {\r\n      this.snackBar.open(data.message, \"Close\", {\r\n        duration: 1000\r\n      });\r\n      this.socket.emit(\"refresh\", {});\r\n    });\r\n  }\r\n\r\n  markAllMessages() {\r\n    this.messagesService.markAllMessages().subscribe(() => {\r\n      this.msgCount = 0;\r\n      this.snackBar.open(\"Done\", \"Close\", {\r\n        duration: 1000\r\n      });\r\n      this.socket.emit(\"refresh\", {});\r\n    });\r\n  }\r\n\r\n  removeNoti(noti) {\r\n    this.notificationService.deleteNoti(noti._id).subscribe(data => {\r\n      this.socket.emit(\"refresh\", {});\r\n    });\r\n  }\r\n\r\n  timeFromNow(time) {\r\n    return moment(time).fromNow();\r\n  }\r\n\r\n  messageDate(date) {\r\n    return moment(date).calendar(null, {\r\n      sameDay: `[${this.timeFromNow(date)}]`,\r\n      lastDay: \"[Yesterday]\",\r\n      lastWeek: \"DD/MM/YYYY\",\r\n      sameElse: \"DD/MM/YYYY\"\r\n    });\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-lg-3 col-md-4 col-sm-12\">\n      <app-side></app-side>\n    </div>\n\n    <div class=\"col-lg-9 col-md-8 col-sm-12\">\n      <span *ngIf=\"currentUser.notifications.length > 0\">\n        <mat-card\n          class=\"noti-card mat-elevation-z4\"\n          *ngFor=\"let noti of currentUser.notifications.slice().reverse()\"\n        >\n          <button\n            matTooltip=\"Delete Notification\"\n            class=\"close noti-remove\"\n            (click)=\"removeNoti(noti)\"\n          >\n            <mat-icon>delete_forever</mat-icon>\n          </button>\n          <button\n            [matTooltip]=\"!noti.read ? 'Mark as Read' : 'Read'\"\n            class=\"close noti-icon\"\n            (click)=\"!noti.read ? markRead(noti) : ''\"\n          >\n            <mat-icon [ngStyle]=\"{ color: !noti.read ? 'orange' : 'green' }\">{{\n              !noti.read ? \"lens\" : \"panorama_fish_eye\"\n            }}</mat-icon>\n          </button>\n\n          <mat-card-header>\n            <!-- <div\n            mat-card-avatar\n            class=\"avatar\"\n            *ngIf=\"post?.user?.image\"\n            [ngStyle]=\"{ 'background-image': 'url(' + user.image + ')' }\"\n          ></div> -->\n            <div mat-card-avatar class=\"noImage avatar\"></div>\n            <mat-card-title\n              class=\"noti-title\"\n              [ngStyle]=\"{ 'font-weight': !noti.read ? 'bold' : 'normal' }\"\n              >{{ noti.message }}</mat-card-title\n            >\n            <mat-card-subtitle class=\"time\">{{\n              timeFromNow(noti.created)\n            }}</mat-card-subtitle>\n          </mat-card-header>\n        </mat-card>\n      </span>\n      <h3 *ngIf=\"currentUser.notifications.length === 0\">\n        You have no notifications\n      </h3>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { UsersService } from \"../../services/users.service\";\nimport { TokenService } from \"../../services/token.service\";\nimport { NotificationsService } from \"../../services/notifications.service\";\n\nimport io from \"socket.io-client\";\nimport * as moment from \"moment\";\n\n@Component({\n  selector: \"app-notifications\",\n  templateUrl: \"./notifications.component.html\",\n  styleUrls: [\"./notifications.component.scss\"]\n})\nexport class NotificationsComponent implements OnInit {\n  socket: any;\n  currentUser: any;\n\n  constructor(\n    private usersService: UsersService,\n    private tokenService: TokenService,\n    private notificationService: NotificationsService\n  ) {\n    this.socket = io(\"http://localhost:5500\");\n  }\n\n  ngOnInit() {\n    this.currentUser = this.tokenService.getPayload();\n    this.getCurrentUser();\n    this.socket.on(\"refreshPage\", () => {\n      this.getCurrentUser();\n    });\n  }\n\n  getCurrentUser() {\n    this.usersService.getUserById(this.currentUser._id).subscribe(\n      data => {\n        this.currentUser = data.user;\n      },\n      err => console.log(err)\n    );\n  }\n\n  markRead(noti) {\n    this.notificationService.markRead(noti._id).subscribe(data => {\n      this.socket.emit(\"refresh\", {});\n    });\n  }\n\n  removeNoti(noti) {\n    this.notificationService.deleteNoti(noti._id).subscribe(data => {\n      this.socket.emit(\"refresh\", {});\n    });\n  }\n\n  timeFromNow(time) {\n    return moment(time).fromNow();\n  }\n}\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-3 col-md-4 col-sm-12\">\r\n      <app-side></app-side>\r\n    </div>\r\n    <div class=\"col-lg-9 col-md-8 col-sm-12\">\r\n      <mat-form-field class=\"col-12 searchInput\" appearance=\"outline\">\r\n        <mat-icon matPrefix>search</mat-icon>\r\n        <input\r\n          matInput\r\n          type=\"search\"\r\n          placeholder=\"Search People\"\r\n          [(ngModel)]=\"search\"\r\n        />\r\n        <button\r\n          mat-button\r\n          *ngIf=\"search\"\r\n          matSuffix\r\n          mat-icon-button\r\n          aria-label=\"Clear\"\r\n          (click)=\"search = ''\"\r\n        >\r\n          <mat-icon>close</mat-icon>\r\n        </button>\r\n      </mat-form-field>\r\n      <div class=\"col-12\">\r\n        <div\r\n          *ngFor=\"let user of allUsers\"\r\n          class=\"usercard col-xl-4 col-lg-6 col-md-12 col-sm-12\"\r\n        >\r\n          <mat-card>\r\n            <img\r\n              mat-card-image\r\n              src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"\r\n              alt=\"Photo of a Shiba Inu\"\r\n            />\r\n            <mat-card-header>\r\n              <mat-card-title>{{ user.username }}</mat-card-title>\r\n              <mat-card-subtitle>\r\n                <img\r\n                  class=\"flag\"\r\n                  src=\"../../../assets/flags/{{ user.country }}.png\"\r\n                />\r\n              </mat-card-subtitle>\r\n            </mat-card-header>\r\n\r\n            <mat-card-actions>\r\n              <!-- If the user is followed -->\r\n              <button\r\n                *ngIf=\"checkUserFollowing(user.followers, currentUser._id)\"\r\n                mat-raised-button\r\n                class=\"followed\"\r\n                (click)=\"unFollow(user)\"\r\n              >\r\n                <span><mat-icon> record_voice_over </mat-icon> Unfollow</span>\r\n              </button>\r\n\r\n              <!-- If the user is not followed -->\r\n              <button\r\n                *ngIf=\"!checkUserFollowing(user.followers, currentUser._id)\"\r\n                mat-raised-button\r\n                (click)=\"onFollow(user)\"\r\n              >\r\n                <span>\r\n                  <mat-icon>\r\n                    voice_over_off\r\n                  </mat-icon>\r\n                  Follow\r\n                </span>\r\n              </button>\r\n\r\n              <button mat-raised-button [routerLink]=\"['/chat', user.username]\">\r\n                <mat-icon>message</mat-icon>\r\n              </button>\r\n            </mat-card-actions>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport { remove, find } from \"lodash\";\r\n\r\nimport { UsersService } from \"../../services/users.service\";\r\nimport { TokenService } from \"../../services/token.service\";\r\n\r\n@Component({\r\n  selector: \"app-people\",\r\n  templateUrl: \"./people.component.html\",\r\n  styleUrls: [\"./people.component.scss\"]\r\n})\r\nexport class PeopleComponent implements OnInit {\r\n  socket: any;\r\n  currentUser: any;\r\n  allUsers: any[];\r\n  search: any;\r\n\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private tokenService: TokenService\r\n  ) {\r\n    this.socket = io(\"http://localhost:5500\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.tokenService.getPayload();\r\n    this.getUsers();\r\n\r\n    this.socket.on(\"refreshPage\", () => {\r\n      this.getUsers();\r\n      this.getCurrentUser();\r\n    });\r\n  }\r\n\r\n  getUsers() {\r\n    this.usersService.getUsers().subscribe(data => {\r\n      remove(data.users, { _id: this.currentUser._id });\r\n      this.allUsers = data.users;\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    this.usersService.getUserById(this.currentUser._id).subscribe(data => {\r\n      this.currentUser = data.user;\r\n    });\r\n  }\r\n\r\n  onFollow(user) {\r\n    this.usersService.followUser(user._id).subscribe(res => {\r\n      this.socket.emit(\"refresh\", {});\r\n    });\r\n  }\r\n\r\n  unFollow(user) {\r\n    this.usersService.unFollowUser(user._id).subscribe(res => {\r\n      this.socket.emit(\"refresh\", {});\r\n    });\r\n  }\r\n\r\n  checkUserFollowing(arr, id) {\r\n    const found = find(arr, [\"follower._id\", id]);\r\n    return found ? true : false;\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div>\r\n    <button class=\"close\" (click)=\"close()\">\r\n      <mat-icon>clear</mat-icon>\r\n    </button>\r\n    <h4 class=\"text-center\">Upload Post</h4>\r\n  </div>\r\n  <div class=\"row\">\r\n    <form\r\n      class=\"col-12\"\r\n      [formGroup]=\"postForm\"\r\n      (ngSubmit)=\"createPost()\"\r\n      novalidate\r\n    >\r\n      <mat-form-field class=\"col-12\" appearance=\"outline\">\r\n        <mat-label>Description</mat-label>\r\n        <textarea\r\n          matInput\r\n          formControlName=\"post\"\r\n          placeholder=\"Add Description\"\r\n        ></textarea>\r\n        <mat-error>Required filed</mat-error>\r\n      </mat-form-field>\r\n      <div class=\"col-12\">\r\n        <a\r\n          mat-flat-button\r\n          color=\"primary\"\r\n          class=\"btn-block upload\"\r\n          (click)=\"fileToUpload.click()\"\r\n        >\r\n          <label for=\"fileToUpload\"\r\n            ><mat-icon>add_photo_alternate</mat-icon> Upload Image</label\r\n          >\r\n        </a>\r\n        <input\r\n          #fileToUpload\r\n          multiple=\"multiple\"\r\n          type=\"file\"\r\n          style=\"display:none;\"\r\n        />\r\n\r\n        <mat-card-actions>\r\n          <button\r\n            mat-raised-button\r\n            (click)=\"close()\"\r\n            class=\"btn-danger btn-lg float-left\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            [disabled]=\"postForm.invalid\"\r\n            mat-raised-button\r\n            class=\"btn-primary btn-lg float-right\"\r\n          >\r\n            Create Post\r\n          </button>\r\n        </mat-card-actions>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { PostsService } from \"../../services/posts.service\";\r\nimport { MatDialogRef } from \"@angular/material\";\r\nimport io from \"socket.io-client\";\r\n\r\n@Component({\r\n  selector: \"app-post-form\",\r\n  templateUrl: \"./post-form.component.html\",\r\n  styleUrls: [\"./post-form.component.scss\"]\r\n})\r\nexport class PostFormComponent implements OnInit {\r\n  socket: any;\r\n  postForm: FormGroup;\r\n  private image: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private postsService: PostsService,\r\n    public dialogRef: MatDialogRef<PostFormComponent>\r\n  ) {\r\n    this.socket = io(\"http://localhost:5500\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.postForm = this.fb.group({\r\n      post: [\"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  createPost() {\r\n    this.postsService.createPost(this.postForm.value).subscribe(data => {\r\n      this.socket.emit(\"refresh\", {});\r\n      this.dialogRef.close();\r\n      this.postForm.reset();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"posts-tabs\" *ngIf=\"posts?.length > 0\">\r\n  <mat-card class=\"post-card\" *ngFor=\"let post of posts; trackBy: trackByFn\">\r\n    <mat-card-header>\r\n      <div\r\n        mat-card-avatar\r\n        class=\"avatar\"\r\n        *ngIf=\"post.user.image\"\r\n        [ngStyle]=\"{ 'background-image': 'url(' + user.image + ')' }\"\r\n      ></div>\r\n      <div\r\n        mat-card-avatar\r\n        class=\"noImage avatar\"\r\n        *ngIf=\"!post.user.image\"\r\n      ></div>\r\n      <mat-card-title>{{ post.username }}</mat-card-title>\r\n      <mat-card-subtitle>{{ post.created | date }}</mat-card-subtitle>\r\n    </mat-card-header>\r\n    <!-- <img\r\n    mat-card-image\r\n    src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\"\r\n    alt=\"Photo of a Shiba Inu\"\r\n  /> -->\r\n    <mat-card-content class=\"post-content\">\r\n      <p>\r\n        {{ post.post }}\r\n      </p>\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button\r\n        mat-button\r\n        [ngClass]=\"checkUserLikes(post.likes) ? 'liked' : ''\"\r\n        (click)=\"checkUserLikes(post.likes) ? onUnLike(post) : onLike(post)\"\r\n      >\r\n        <mat-icon>thumb_up</mat-icon> Like {{ post.likes.length }}\r\n      </button>\r\n      <button\r\n        mat-button\r\n        [ngClass]=\"!checkUserComments(post.comments) ? '' : 'commented'\"\r\n        (click)=\"onCommentDialogOpen(post)\"\r\n      >\r\n        <mat-icon>question_answer</mat-icon> Comment {{ post.comments.length }}\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MatSnackBar, MatDialog, MatDialogConfig } from \"@angular/material\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport { some } from \"lodash\";\r\n\r\nimport { PostsService } from \"../../services/posts.service\";\r\nimport { TokenService } from \"../../services/token.service\";\r\nimport { CommentsComponent } from \"../comments/comments.component\";\r\n\r\n@Component({\r\n  selector: \"app-posts\",\r\n  templateUrl: \"./posts.component.html\",\r\n  styleUrls: [\"./posts.component.scss\"]\r\n})\r\nexport class PostsComponent implements OnInit {\r\n  socket: any;\r\n  posts: any[] = [];\r\n  username: string;\r\n\r\n  constructor(\r\n    private postsService: PostsService,\r\n    private tokenService: TokenService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog\r\n  ) {\r\n    this.socket = io(\"http://localhost:5500\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.username = this.tokenService.getPayload().username;\r\n    this.getAllPosts();\r\n\r\n    // Listen for posts changes\r\n    this.socket.on(\"refreshPage\", () => {\r\n      this.getAllPosts();\r\n    });\r\n  }\r\n\r\n  trackByFn(index, item) {\r\n    return index;\r\n  }\r\n\r\n  getAllPosts() {\r\n    this.postsService.getPosts().subscribe(data => {\r\n      this.posts = data.posts;\r\n    });\r\n  }\r\n\r\n  onLike(post) {\r\n    this.postsService.likePost(post).subscribe(\r\n      data => {\r\n        this.socket.emit(\"refresh\", {});\r\n      },\r\n      err => {\r\n        this.snackBar.open(err, \"Close\", {\r\n          duration: 2000\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  onUnLike(post) {\r\n    this.postsService.unLikePost(post).subscribe(\r\n      data => {\r\n        this.socket.emit(\"refresh\", {});\r\n      },\r\n      err => {\r\n        this.snackBar.open(err, \"Close\", {\r\n          duration: 2000\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  checkUserLikes(arr) {\r\n    return some(arr, { username: this.username });\r\n  }\r\n\r\n  checkUserComments(arr) {\r\n    return some(arr, { username: this.username });\r\n  }\r\n\r\n  onCommentDialogOpen(post) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.width = \"65%\";\r\n    dialogConfig.data = {\r\n      post\r\n    };\r\n    this.dialog.open(CommentsComponent, dialogConfig);\r\n  }\r\n}\r\n","<mat-card class=\"side-card mat-elevation-z4\">\r\n  <mat-list dense class=\"container\">\r\n    <div class=\"row status\">\r\n      <span class=\"col-4\"\r\n        ><p class=\"title\">Posts</p>\r\n        {{ currentUser?.posts ? currentUser.posts.length : 0 }}</span\r\n      >\r\n      <span class=\"col-4\"\r\n        ><p class=\"title\">\r\n          <a [routerLink]=\"['/people/following']\">Following</a>\r\n        </p>\r\n        {{ currentUser?.following ? currentUser.following.length : 0 }}</span\r\n      >\r\n      <span class=\"col-4\"\r\n        ><p class=\"title\">\r\n          <a [routerLink]=\"['/people/followers']\">Followers</a>\r\n        </p>\r\n        {{ currentUser?.followers ? currentUser.followers.length : 0 }}</span\r\n      >\r\n    </div>\r\n    <mat-list-item\r\n      class=\"list-item\"\r\n      *ngFor=\"let component of sideComponents\"\r\n      [routerLinkActive]=\"'active'\"\r\n      [routerLinkActiveOptions]=\"{ exact: true }\"\r\n      [routerLink]=\"[component.link]\"\r\n    >\r\n      <span class=\"col-10\"> {{ component.name }} </span>\r\n      <a class=\"col-2\"\r\n        ><mat-icon>{{ component.icon }}</mat-icon></a\r\n      >\r\n    </mat-list-item>\r\n  </mat-list>\r\n</mat-card>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { UsersService } from \"../../services/users.service\";\r\nimport { TokenService } from \"../../services/token.service\";\r\n\r\nimport io from \"socket.io-client\";\r\n\r\n@Component({\r\n  selector: \"app-side\",\r\n  templateUrl: \"./side.component.html\",\r\n  styleUrls: [\"./side.component.scss\"]\r\n})\r\nexport class SideComponent implements OnInit {\r\n  sideComponents = [\r\n    { name: \"Streams\", link: \"/streams\", icon: \"public\" },\r\n    { name: \"People\", link: \"/people\", icon: \"people\" },\r\n    { name: \"Following\", link: \"/people/following\", icon: \"how_to_reg\" },\r\n    { name: \"Followers\", link: \"/people/followers\", icon: \"camera_front\" },\r\n    { name: \"Notifications\", link: \"/notifications\", icon: \"notifications\" }\r\n  ];\r\n\r\n  socket: any;\r\n  currentUser: any;\r\n\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private tokenService: TokenService\r\n  ) {\r\n    this.socket = io(\"http://localhost:5500\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentUser = this.tokenService.getPayload();\r\n    this.getCurrentUser();\r\n    this.socket.on(\"refreshPage\", () => {\r\n      this.getCurrentUser();\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    this.usersService.getUserById(this.currentUser._id).subscribe(\r\n      data => {\r\n        this.currentUser = data.user;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n}\r\n","<div class=\"container-fluid register\">\r\n  <form [formGroup]=\"signupForm\" (ngSubmit)=\"signupUser()\" novalidate>\r\n    <div class=\"row\">\r\n      <mat-form-field class=\"col-md-6 col-12\" appearance=\"legacy\">\r\n        <mat-label>Full Name</mat-label>\r\n        <input\r\n          formControlName=\"fullname\"\r\n          matInput\r\n          placeholder=\"Enter Full Name\"\r\n          required\r\n        />\r\n        <mat-icon matSuffix>perm_identity</mat-icon>\r\n        <mat-error *ngIf=\"signupForm.controls['fullname'].invalid\"\r\n          >Full Name is required</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6 col-12\" appearance=\"legacy\">\r\n        <mat-label>User Name</mat-label>\r\n        <input\r\n          formControlName=\"username\"\r\n          matInput\r\n          placeholder=\"Enter User Name\"\r\n          required\r\n        />\r\n        <mat-icon matSuffix>account_circle</mat-icon>\r\n        <mat-error *ngIf=\"signupForm.controls['username'].invalid\"\r\n          >Username is required</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6 col-12\" appearance=\"legacy\">\r\n        <input\r\n          formControlName=\"birthday\"\r\n          class=\"date\"\r\n          matInput\r\n          [matDatepicker]=\"birthday\"\r\n          placeholder=\"Select Your Birthday\"\r\n          (click)=\"birthday.open()\"\r\n          required\r\n        />\r\n        <mat-icon class=\"date\" matSuffix (click)=\"birthday.open()\"\r\n          >child_care</mat-icon\r\n        >\r\n        <mat-datepicker #birthday></mat-datepicker>\r\n        <mat-error *ngIf=\"signupForm.controls['birthday'].invalid\"\r\n          >Birthday is required</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6 col-12\">\r\n        <mat-select formControlName=\"sex\" placeholder=\"Select Sex\" required>\r\n          <mat-option\r\n            *ngFor=\"let type of ['Male', 'Female', 'Prefer not to say']\"\r\n            [value]=\"type\"\r\n          >\r\n            {{ type }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"signupForm.controls['sex'].invalid\"\r\n          >Sex is required</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6 col-12\" appearance=\"legacy\">\r\n        <mat-select\r\n          formControlName=\"country\"\r\n          placeholder=\"Select Country\"\r\n          required\r\n        >\r\n          <mat-option *ngFor=\"let country of countriesList\" [value]=\"country\">\r\n            <img src=\"../../../assets/mini-flags/{{ country }}.png\" />\r\n            &nbsp;{{ country }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"signupForm.controls['country'].invalid\"\r\n          >Country is required</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6 col-12\" appearance=\"legacy\">\r\n        <mat-label>Email</mat-label>\r\n        <input\r\n          formControlName=\"email\"\r\n          matInput\r\n          placeholder=\"Enter Email\"\r\n          required\r\n        />\r\n        <mat-icon matSuffix>email</mat-icon>\r\n        <mat-error *ngIf=\"signupForm.controls['email'].invalid\">{{\r\n          getEmailError()\r\n        }}</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6 col-12\" appearance=\"legacy\">\r\n        <mat-label>Phone Number</mat-label>\r\n        <input\r\n          formControlName=\"phoneNumber\"\r\n          matInput\r\n          placeholder=\"Enter Phone Number\"\r\n          required\r\n        />\r\n        <mat-icon matSuffix>phone</mat-icon>\r\n        <mat-error *ngIf=\"signupForm.controls['phoneNumber'].invalid\"\r\n          >Phone Number is required</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field class=\"col-md-6 col-12\" appearance=\"legacy\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          formControlName=\"password\"\r\n          type=\"password\"\r\n          matInput\r\n          placeholder=\"Enter Password\"\r\n          required\r\n        />\r\n        <mat-icon matSuffix>lock</mat-icon>\r\n        <mat-error *ngIf=\"signupForm.controls['password'].invalid\"\r\n          >Password is required</mat-error\r\n        >\r\n      </mat-form-field>\r\n      <button\r\n        id=\"signupbtn\"\r\n        [disabled]=\"signupForm.invalid\"\r\n        class=\"btn btn-primary btn-block btn-md\"\r\n      >\r\n        Sign Up\r\n      </button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { MatSnackBar } from \"@angular/material\";\r\nimport { Router } from \"@angular/router\";\r\nimport countries from \"../../../assets/countries\";\r\n\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { TokenService } from \"../../services/token.service\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"]\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signupForm: FormGroup;\r\n  countriesList: any;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private fb: FormBuilder,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private tokenService: TokenService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.signupForm = this.fb.group({\r\n      fullname: [\"\", Validators.required],\r\n      username: [\"\", Validators.required],\r\n      birthday: [new Date(), Validators.required],\r\n      sex: [\"\", Validators.required],\r\n      country: [\"\", Validators.required],\r\n      email: [\"\", [Validators.email, Validators.required]],\r\n      phoneNumber: [\"\", Validators.required],\r\n      password: [\"\", Validators.required]\r\n    });\r\n    this.countriesList = countries.countries;\r\n  }\r\n\r\n  signupUser() {\r\n    this.authService.registerUser(this.signupForm.value).subscribe(\r\n      res => {\r\n        // Setting the token\r\n        this.tokenService.setToken(res.token);\r\n        this.signupForm.reset({\r\n          birthday: new Date()\r\n        });\r\n        this.router.navigate([\"streams\"]);\r\n      },\r\n      err => {\r\n        if (err.error.messageJoi) {\r\n          this.snackBar.open(err.error.messageJoi[0].message, \"Close\", {\r\n            duration: 500\r\n          });\r\n        } else if (err.error.message) {\r\n          this.snackBar.open(err.error.message, \"Close\", {\r\n            duration: 500\r\n          });\r\n        } else {\r\n          this.snackBar.open(\"Internal server error\", \"Close\", {\r\n            duration: 500\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  getEmailError() {\r\n    const email = this.signupForm.get(\"email\");\r\n    return email.hasError(\"required\")\r\n      ? \"Email is required\"\r\n      : email.hasError(\"email\")\r\n      ? \"Not a valid email\"\r\n      : \"\";\r\n  }\r\n\r\n  // TODO Add the country flag to select form\r\n  getCountryFlag(code) {\r\n    return `<img src=\"https://www.countryflags.io/${code}/flat/16.png\"`;\r\n  }\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-3 col-md-4 col-sm-12\">\r\n      <app-side></app-side>\r\n    </div>\r\n    <div class=\"col-lg-9 col-md-8 col-sm-12\">\r\n      <button\r\n        mat-raised-button\r\n        color=\"warn\"\r\n        (click)=\"onCreatePostOpen()\"\r\n        class=\"postbtn btn-block\"\r\n      >\r\n        <mat-icon>add</mat-icon> Create Post</button\r\n      ><br />\r\n      <app-posts></app-posts>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material';\r\n\r\nimport { TokenService } from '../../services/token.service';\r\nimport { PostFormComponent } from '../post-form/post-form.component';\r\n\r\n@Component({\r\n  selector: 'app-streams',\r\n  templateUrl: './streams.component.html',\r\n  styleUrls: ['./streams.component.scss']\r\n})\r\nexport class StreamsComponent implements OnInit {\r\n  token: any;\r\n  constructor(private tokenService: TokenService, private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.token = this.tokenService.getToken();\r\n  }\r\n\r\n  onCreatePostOpen() {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.width = '65%';\r\n    this.dialog.open(PostFormComponent, dialogConfig);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Router,\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { TokenService } from '../services/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private tokenService: TokenService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    const token = this.tokenService.getToken();\r\n    if (token) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport * as M from \"@angular/material\";\r\nimport \"hammerjs\";\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    M.MatTabsModule,\r\n    M.MatFormFieldModule,\r\n    M.MatInputModule,\r\n    M.MatIconModule,\r\n    M.MatSelectModule,\r\n    M.MatDatepickerModule,\r\n    M.MatNativeDateModule,\r\n    M.MatSnackBarModule,\r\n    M.MatProgressBarModule,\r\n    M.MatToolbarModule,\r\n    M.MatSidenavModule,\r\n    M.MatMenuModule,\r\n    M.MatButtonModule,\r\n    M.MatListModule,\r\n    M.MatTooltipModule,\r\n    M.MatCardModule,\r\n    M.MatDialogModule,\r\n    M.MatExpansionModule,\r\n    M.MatBadgeModule,\r\n    M.MatCheckboxModule\r\n  ],\r\n  exports: [\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    M.MatTabsModule,\r\n    M.MatFormFieldModule,\r\n    M.MatInputModule,\r\n    M.MatIconModule,\r\n    M.MatSelectModule,\r\n    M.MatDatepickerModule,\r\n    M.MatNativeDateModule,\r\n    M.MatSnackBarModule,\r\n    M.MatProgressBarModule,\r\n    M.MatToolbarModule,\r\n    M.MatSidenavModule,\r\n    M.MatMenuModule,\r\n    M.MatButtonModule,\r\n    M.MatListModule,\r\n    M.MatTooltipModule,\r\n    M.MatCardModule,\r\n    M.MatDialogModule,\r\n    M.MatExpansionModule,\r\n    M.MatBadgeModule,\r\n    M.MatCheckboxModule\r\n  ]\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthTabsComponent } from '../../components/auth-tabs/auth-tabs.component';\r\n\r\nconst routes: Routes = [{ path: '', component: AuthTabsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthTabsComponent } from '../../components/auth-tabs/auth-tabs.component';\r\nimport { AngularMaterialModule } from '../angular-material.module';\r\nimport { LoginComponent } from '../../components/login/login.component';\r\nimport { SignupComponent } from '../../components/signup/signup.component';\r\nimport { AuthService } from '../../services/auth.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AngularMaterialModule],\r\n  declarations: [AuthTabsComponent, LoginComponent, SignupComponent],\r\n  exports: [AuthTabsComponent, LoginComponent, SignupComponent],\r\n  providers: [AuthService]\r\n})\r\nexport class AuthModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { AuthRoutingModule } from \"./auth/auth-routing.module\";\r\nimport { StreamsModule } from \"./streams/streams.module\";\r\nimport { AuthModule } from \"./auth/auth.module\";\r\nimport { StreamsRoutingModule } from \"./streams/streams-routing.module\";\r\nimport { NgxAutoScrollModule } from \"ngx-auto-scroll\";\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    AuthModule,\r\n    AuthRoutingModule,\r\n    StreamsModule,\r\n    StreamsRoutingModule,\r\n    NgxAutoScrollModule\r\n  ],\r\n  exports: [\r\n    AuthModule,\r\n    AuthRoutingModule,\r\n    StreamsModule,\r\n    StreamsRoutingModule,\r\n    NgxAutoScrollModule\r\n  ]\r\n})\r\nexport class GroupModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { AuthGuard } from \"../../guard/auth.guard\";\r\nimport { StreamsComponent } from \"../../components/streams/streams.component\";\r\nimport { PeopleComponent } from \"../../components/people/people.component\";\r\nimport { FollowingComponent } from \"../../components/following/following.component\";\r\nimport { FollowersComponent } from \"../../components/followers/followers.component\";\r\nimport { NotificationsComponent } from \"../../components/notifications/notifications.component\";\r\nimport { ChatComponent } from \"../../components/chat/chat.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"streams\",\r\n    component: StreamsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"people\",\r\n    component: PeopleComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"people/following\",\r\n    component: FollowingComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"people/followers\",\r\n    component: FollowersComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"notifications\",\r\n    component: NotificationsComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: \"chat/:name\",\r\n    component: ChatComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: \"**\", redirectTo: \"streams\" }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StreamsRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\n// Services\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\nimport { TokenService } from \"../../services/token.service\";\r\nimport { PostsService } from \"../../services/posts.service\";\r\nimport { UsersService } from \"../../services/users.service\";\r\nimport { NotificationsService } from \"../../services/notifications.service\";\r\nimport { MessagesService } from \"src/app/services/messages.service\";\r\n\r\nimport { UploadDirective } from \"../../directives/upload.directive\";\r\n\r\nimport { StreamsComponent } from \"../../components/streams/streams.component\";\r\nimport { NavbarComponent } from \"../../components/navbar/navbar.component\";\r\nimport { SideComponent } from \"../../components/side/side.component\";\r\nimport { PostFormComponent } from \"../../components/post-form/post-form.component\";\r\nimport { PostsComponent } from \"../../components/posts/posts.component\";\r\nimport { CommentsComponent } from \"../../components/comments/comments.component\";\r\nimport { PeopleComponent } from \"../../components/people/people.component\";\r\nimport { FollowingComponent } from \"../../components/following/following.component\";\r\nimport { FollowersComponent } from \"../../components/followers/followers.component\";\r\nimport { NotificationsComponent } from \"../../components/notifications/notifications.component\";\r\nimport { ChatComponent } from \"../../components/chat/chat.component\";\r\nimport { MessagesComponent } from \"../../components/messages/messages.component\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AngularMaterialModule, RouterModule],\r\n  declarations: [\r\n    StreamsComponent,\r\n    NavbarComponent,\r\n    SideComponent,\r\n    PostFormComponent,\r\n    PostsComponent,\r\n    UploadDirective,\r\n    CommentsComponent,\r\n    PeopleComponent,\r\n    FollowingComponent,\r\n    FollowersComponent,\r\n    NotificationsComponent,\r\n    ChatComponent,\r\n    MessagesComponent\r\n  ],\r\n  exports: [\r\n    StreamsComponent,\r\n    NavbarComponent,\r\n    SideComponent,\r\n    PostFormComponent,\r\n    PostsComponent,\r\n    UploadDirective,\r\n    CommentsComponent,\r\n    PeopleComponent,\r\n    FollowingComponent\r\n  ],\r\n  providers: [\r\n    TokenService,\r\n    PostsService,\r\n    UsersService,\r\n    NotificationsService,\r\n    MessagesService\r\n  ],\r\n  entryComponents: [PostFormComponent, CommentsComponent]\r\n})\r\nexport class StreamsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  registerUser(user): Observable<any> {\r\n    return this.http.post(`${environment.api}/register`, user);\r\n  }\r\n\r\n  loginUser(user): Observable<any> {\r\n    return this.http.post(`${environment.api}/login`, user);\r\n  }\r\n\r\n  // Convert the date for the forms\r\n  formatDate(inputDate) {\r\n    function pad(s) {\r\n      return s < 10 ? '0' + s : s;\r\n    }\r\n    const d = new Date(inputDate);\r\n    return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('/');\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\nimport { environment } from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class MessagesService {\n  constructor(private http: HttpClient) {}\n\n  sendMessage(senderId, receiverId, receiverName, message): Observable<any> {\n    return this.http.post(\n      `${environment.api}/message/send/${senderId}/${receiverId}`,\n      { receiverName, message }\n    );\n  }\n\n  getMessages(senderId, receiverId): Observable<any> {\n    return this.http.get(\n      `${environment.api}/message/get/${senderId}/${receiverId}`\n    );\n  }\n\n  markMessage(sender, receiver): Observable<any> {\n    return this.http.get(\n      `${environment.api}/message/mark/${sender}/${receiver}`\n    );\n  }\n\n  markAllMessages(): Observable<any> {\n    return this.http.get(`${environment.api}/message/mark-all`);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\n\nimport { environment } from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class NotificationsService {\n  constructor(private http: HttpClient) {}\n  // A service to mark a specific notification as read\n  markRead(id): Observable<any> {\n    return this.http.post(`${environment.api}/notifications/mark`, { id });\n  }\n  // A service to mark a specific notification as read\n  markAllRead(): Observable<any> {\n    return this.http.post(`${environment.api}/notifications/mark-all`, {});\n  }\n\n  // A service to delete a specific notification\n  deleteNoti(id): Observable<any> {\n    return this.http.post(`${environment.api}/notifications/delete`, { id });\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class PostsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createPost(body): Observable<any> {\r\n    return this.http.post(`${environment.api}/post/create`, body);\r\n  }\r\n\r\n  likePost(post): Observable<any> {\r\n    return this.http.post(`${environment.api}/post/like`, post);\r\n  }\r\n\r\n  unLikePost(post): Observable<any> {\r\n    return this.http.post(`${environment.api}/post/unlike`, post);\r\n  }\r\n\r\n  addComment(post): Observable<any> {\r\n    return this.http.post(`${environment.api}/post/comment`, post);\r\n  }\r\n\r\n  getPosts(): Observable<any> {\r\n    return this.http.get(`${environment.api}/post/getAll`);\r\n  }\r\n\r\n  getPost(id): Observable<any> {\r\n    return this.http.get(`${environment.api}/post/getPost/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(private tokenService: TokenService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const headersConfig = {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json'\r\n    };\r\n    const token = this.tokenService.getToken();\r\n    if (token) {\r\n      headersConfig['Authorization'] = `bearer ${token}`;\r\n    }\r\n    const _req = req.clone({ setHeaders: headersConfig });\r\n    return next.handle(_req);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n  constructor(private cookieService: CookieService) {}\r\n\r\n  setToken(token) {\r\n    this.cookieService.set('Token', token);\r\n  }\r\n\r\n  getToken() {\r\n    return this.cookieService.get('Token');\r\n  }\r\n\r\n  deleteToken() {\r\n    this.cookieService.delete('Token');\r\n  }\r\n\r\n  getPayload() {\r\n    const token = this.getToken();\r\n    let payload;\r\n    if (token) {\r\n      payload = token.split('.')[1];\r\n      payload = JSON.parse(window.atob(payload));\r\n    }\r\n    return payload;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class UsersService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUsers(): Observable<any> {\r\n    return this.http.get(`${environment.api}/user/getAll`);\r\n  }\r\n\r\n  getUserById(id): Observable<any> {\r\n    return this.http.get(`${environment.api}/user/getById/${id}`);\r\n  }\r\n\r\n  getUserByName(username): Observable<any> {\r\n    return this.http.get(`${environment.api}/user/getByName/${username}`);\r\n  }\r\n\r\n  followUser(userId): Observable<any> {\r\n    return this.http.post(`${environment.api}/user/follow`, {\r\n      userId\r\n    });\r\n  }\r\n\r\n  unFollowUser(userId): Observable<any> {\r\n    return this.http.post(`${environment.api}/user/unfollow`, {\r\n      userId\r\n    });\r\n  }\r\n}\r\n","module.exports = {\r\n  countries: [\r\n    'Afghanistan',\r\n    'Albania',\r\n    'Algeria',\r\n    'American_Samoa',\r\n    'Andorra',\r\n    'Angola',\r\n    'Anguilla',\r\n    'Antigua_and_Barbuda',\r\n    'Argentina',\r\n    'Armenia',\r\n    'Aruba',\r\n    'Australia',\r\n    'Austria',\r\n    'Azerbaijan',\r\n    'Bahamas',\r\n    'Bahrain',\r\n    'Bangladesh',\r\n    'Barbados',\r\n    'Belarus',\r\n    'Belgium',\r\n    'Belize',\r\n    'Benin',\r\n    'Bermuda',\r\n    'Bhutan',\r\n    'Bolivia',\r\n    'Bosnia',\r\n    'Botswana',\r\n    'Brazil',\r\n    'British_Virgin_Islands',\r\n    'Brunei',\r\n    'Bulgaria',\r\n    'Burkina_Faso',\r\n    'Burundi',\r\n    'Cambodia',\r\n    'Cameroon',\r\n    'Canada',\r\n    'Cape_Verde',\r\n    'Cayman_Islands',\r\n    'Central_African_Republic',\r\n    'Chad',\r\n    'Chile',\r\n    'China',\r\n    'Christmas_Island',\r\n    'Colombia',\r\n    'Comoros',\r\n    'Cook_Islands',\r\n    'Costa_Rica',\r\n    \"Côte_d'Ivoire\",\r\n    'Croatia',\r\n    'Cuba',\r\n    'Cyprus',\r\n    'Cyprus_Northern',\r\n    'Czech_Republic',\r\n    'Democratic_Republic_of_the_Congo',\r\n    'Denmark',\r\n    'Djibouti',\r\n    'Dominica',\r\n    'Dominican_Republic',\r\n    'Ecuador',\r\n    'Egypt',\r\n    'El_Salvador',\r\n    'Equatorial_Guinea',\r\n    'Eritrea',\r\n    'Estonia',\r\n    'Ethiopia',\r\n    'Falkland_Islands',\r\n    'Faroe_Islands',\r\n    'Fiji',\r\n    'Finland',\r\n    'France',\r\n    'French_Polynesia',\r\n    'Gabon',\r\n    'Gambia',\r\n    'Georgia',\r\n    'Germany',\r\n    'Ghana',\r\n    'Gibraltar',\r\n    'Greece',\r\n    'Greenland',\r\n    'Grenada',\r\n    'Guam',\r\n    'Guatemala',\r\n    'Guinea',\r\n    'Guinea_Bissau',\r\n    'Guyana',\r\n    'Haiti',\r\n    'Honduras',\r\n    'Hong_Kong',\r\n    'Hungary',\r\n    'Iceland',\r\n    'India',\r\n    'Indonesia',\r\n    'Iran',\r\n    'Iraq',\r\n    'Ireland',\r\n    'Israel',\r\n    'Italy',\r\n    'Jamaica',\r\n    'Japan',\r\n    'Jordan',\r\n    'Kazakhstan',\r\n    'Kenya',\r\n    'Kiribati',\r\n    'Kuwait',\r\n    'Kyrgyzstan',\r\n    'Laos',\r\n    'Latvia',\r\n    'Lebanon',\r\n    'Lesotho',\r\n    'Liberia',\r\n    'Libya',\r\n    'Liechtenstein',\r\n    'Lithuania',\r\n    'Luxembourg',\r\n    'Macao',\r\n    'Macedonia',\r\n    'Madagascar',\r\n    'Malawi',\r\n    'Malaysia',\r\n    'Maldives',\r\n    'Mali',\r\n    'Malta',\r\n    'Marshall_Islands',\r\n    'Martinique',\r\n    'Mauritania',\r\n    'Mauritius',\r\n    'Mexico',\r\n    'Micronesia',\r\n    'Moldova',\r\n    'Monaco',\r\n    'Mongolia',\r\n    'Montserrat',\r\n    'Morocco',\r\n    'Mozambique',\r\n    'Myanmar',\r\n    'Namibia',\r\n    'Nauru',\r\n    'Nepal',\r\n    'Netherlands',\r\n    'Netherlands_Antilles',\r\n    'New_Zealand',\r\n    'Nicaragua',\r\n    'Niger',\r\n    'Nigeria',\r\n    'Niue',\r\n    'Norfolk_Island',\r\n    'North_Korea',\r\n    'Norway',\r\n    'Oman',\r\n    'Pakistan',\r\n    'Palau',\r\n    'Panama',\r\n    'Papua_New_Guinea',\r\n    'Paraguay',\r\n    'Peru',\r\n    'Philippines',\r\n    'Pitcairn_Islands',\r\n    'Poland',\r\n    'Portugal',\r\n    'Puerto_Rico',\r\n    'Qatar',\r\n    'Republic_of_the_Congo',\r\n    'Romania',\r\n    'Russian_Federation',\r\n    'Rwanda',\r\n    'Saint_Kitts_and_Nevis',\r\n    'Saint_Lucia',\r\n    'Saint_Pierre',\r\n    'Saint_Vicent_and_the_Grenadines',\r\n    'Samoa',\r\n    'San_Marino',\r\n    'Sao_Tomé_and_Príncipe',\r\n    'Saudi_Arabia',\r\n    'Senegal',\r\n    'Serbia_and_Montenegro',\r\n    'Seychelles',\r\n    'Sierra_Leone',\r\n    'Singapore',\r\n    'Slovakia',\r\n    'Slovenia',\r\n    'Soloman_Islands',\r\n    'Somalia',\r\n    'South_Africa',\r\n    'South_Georgia',\r\n    'South_Korea',\r\n    'Soviet_Union',\r\n    'Spain',\r\n    'Sri_Lanka',\r\n    'Sudan',\r\n    'Suriname',\r\n    'Swaziland',\r\n    'Sweden',\r\n    'Switzerland',\r\n    'Syria',\r\n    'Taiwan',\r\n    'Tajikistan',\r\n    'Tanzania',\r\n    'Thailand',\r\n    'Tibet',\r\n    'Timor-Leste',\r\n    'Togo',\r\n    'Tonga',\r\n    'Trinidad_and_Tobago',\r\n    'Tunisia',\r\n    'Turkey',\r\n    'Turkmenistan',\r\n    'Turks_and_Caicos_Islands',\r\n    'Tuvalu',\r\n    'UAE',\r\n    'Uganda',\r\n    'Ukraine',\r\n    'United_Kingdom',\r\n    'United_States_of_America',\r\n    'Uruguay',\r\n    'US_Virgin_Islands',\r\n    'Uzbekistan',\r\n    'Vanuatu',\r\n    'Vatican_City',\r\n    'Venezuela',\r\n    'Vietnam',\r\n    'Wallis_and_Futuna',\r\n    'Yemen',\r\n    'Zambia',\r\n    'Zimbabwe'\r\n  ]\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: \"https://mychatapp-backend.herokuapp.com/api/chatapp\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */"],"sourceRoot":""}